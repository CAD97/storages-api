initSidebarItems({"struct":[["AllocHandle",""],["AllocStorage","A storage that stores objects via an [`Allocator`]."],["BorrowedStorage","A single storage which stores memory in borrowed space."],["Box","A pointer type for heap allocation. A tiny subset of stdâ€™s Box."],["DynStorage","Dynamic single storage for use with `RawBox<dyn Trait, DynStorage<A>>`."],["InlineStorage","A single storage which stores memory inline."],["RawBox","A raw box around some storage. Bundles the storage and its handle."],["RawVec","A raw vec around some slice storage. Bundles the storage and its handle."],["SmallStorage","A single storage which stores memory inline if it fits, otherwise falling back to using an [`Allocator`]."]],"trait":[["MultipleStorage","A storage that can manage multiple memory handles."],["PinningStorage","A storage that allocates pinned memory handles."],["SharedMutabilityStorage","A storage that serves as a uniqueness barrier."],["Storage","Types which can be used to manage memory handles."]],"type":[["Memory",""]]});